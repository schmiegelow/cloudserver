{
  "name": "@zenko/cloudserver",
  "version": "8.1.0-beta",
  "description": "Zenko CloudServer, an open-source Node.js implementation of a server handling the Amazon S3 protocol",
  "main": "index.js",
  "engines": {
    "node": ">=6.9.5"
  },
  "repository": "scality/S3",
  "keywords": [
    "s3",
    "cloud",
    "server"
  ],
  "author": "Scality Inc.",
  "license": "Apache-2.0",
  "bugs": {
    "url": "https://github.com/scality/S3/issues"
  },
  "homepage": "https://github.com/scality/S3#readme",
  "dependencies": {
    "arsenal": "github:scality/arsenal#58e9f26",
    "async": "~2.6.1",
    "aws-sdk": "2.384.0",
    "azure-storage": "^2.1.0",
    "backo": "^1.1.0",
    "bucketclient": "scality/bucketclient#5aa99d7",
    "bufferutil": "^4.0.1",
    "commander": "^2.9.0",
    "diskusage": "1.0.0",
    "google-auto-auth": "^0.10.1",
    "http-proxy": "^1.17.0",
    "https-proxy-agent": "^2.2.0",
    "mongodb": "^3.1.10",
    "node-forge": "^0.7.1",
    "node-uuid": "^1.4.3",
    "npm-run-all": "~4.1.5",
    "prom-client": "^11.2.1",
    "request": "^2.81.0",
    "sproxydclient": "scality/sproxydclient#45090b7",
    "sql-where-parser": "~2.2.1",
    "utapi": "scality/utapi#f2f1d0c",
    "utf-8-validate": "^5.0.2",
    "utf8": "~3.0.0",
    "uuid": "^3.0.1",
    "vaultclient": "scality/vaultclient#754b6e1",
    "werelogs": "scality/werelogs#74b121b",
    "ws": "^6.1.2",
    "xml2js": "~0.4.16"
  },
  "devDependencies": {
    "bluebird": "^3.3.1",
    "eslint": "^5.3.0",
    "eslint-config-airbnb-base": "^13.1.0",
    "eslint-config-scality": "scality/Guidelines#1d6f287b",
    "eslint-plugin-import": "^2.14.0",
    "ioredis": "4.3.0",
    "istanbul": "1.0.0-alpha.2",
    "istanbul-api": "2.0.6",
    "lolex": "^3.0.0",
    "mocha": "^5.2.0",
    "mocha-junit-reporter": "1.18.0",
    "node-mocks-http": "1.7.3",
    "s3blaster": "scality/s3blaster#950fab1",
    "tv4": "^1.2.7"
  },
  "optionalDependencies": {
    "cdmiclient": "scality/cdmiclient#8f0c2e6"
  },
  "scripts": {
    "cloudserver": "S3METADATA=mongodb npm-run-all --parallel start_dataserver start_s3server",
    "ft_awssdk": "cd tests/functional/aws-node-sdk && mocha test/",
    "ft_awssdk_aws": "cd tests/functional/aws-node-sdk && AWS_ON_AIR=true mocha test/",
    "ft_awssdk_buckets": "cd tests/functional/aws-node-sdk && mocha test/bucket",
    "ft_awssdk_objects_misc": "cd tests/functional/aws-node-sdk && mocha test/legacy test/object test/service test/support",
    "ft_awssdk_versioning": "cd tests/functional/aws-node-sdk && mocha test/versioning/",
    "ft_awssdk_external_backends": "cd tests/functional/aws-node-sdk && mocha test/multipleBackend",
    "ft_management": "cd tests/functional/report && npm test",
    "ft_node": "cd tests/functional/raw-node && npm test",
    "ft_node_routes": "cd tests/functional/raw-node && npm run test-routes",
    "ft_gcp": "cd tests/functional/raw-node && npm run test-gcp",
    "ft_healthchecks": "cd tests/functional/healthchecks && npm test",
    "ft_s3cmd": "cd tests/functional/s3cmd && mocha -t 40000 *.js",
    "ft_s3curl": "cd tests/functional/s3curl && mocha -t 40000 *.js",
    "ft_util": "cd tests/functional/utilities && mocha -t 40000 *.js",
    "ft_test": "npm-run-all -s ft_awssdk ft_s3cmd ft_s3curl ft_node ft_healthchecks ft_management ft_util",
    "ft_search": "cd tests/functional/aws-node-sdk && mocha -t 90000 test/mdSearch",
    "install_ft_deps": "npm install aws-sdk@2.28.0 bluebird@3.3.1 mocha@2.3.4 mocha-junit-reporter@1.11.1 tv4@1.2.7",
    "lint": "eslint $(git ls-files '*.js')",
    "lint_md": "mdlint $(git ls-files '*.md')",
    "mem_backend": "S3BACKEND=mem node index.js",
    "perf": "mocha tests/performance/s3standard.js",
    "start": "npm-run-all --parallel start_dmd start_s3server",
    "start_mongo": "npm run cloudserver",
    "start_mdserver": "node mdserver.js",
    "start_dataserver": "node dataserver.js",
    "start_pfsserver": "node pfsserver.js",
    "start_s3server": "node index.js",
    "start_dmd": "npm-run-all --parallel start_mdserver start_dataserver",
    "start_utapi": "node lib/utapi/utapi.js",
    "utapi_replay": "node lib/utapi/utapiReplay.js",
    "management_agent": "node managementAgent.js",
    "test": "CI=true S3BACKEND=mem mocha --recursive tests/unit",
    "test_legacy_location": "CI=true S3_LOCATION_FILE=tests/locationConfig/locationConfigLegacy.json S3BACKEND=mem mocha --recursive tests/unit",
    "multiple_backend_test": "CI=true S3BACKEND=mem S3DATA=multiple mocha -t 20000 --recursive tests/multipleBackend",
    "unit_coverage": "CI=true mkdir -p coverage/unit/ && S3BACKEND=mem MOCHA_FILE=$CIRCLE_TEST_REPORTS/unit/unit.xml istanbul cover --dir coverage/unit _mocha -- --reporter mocha-junit-reporter --recursive tests/unit",
    "unit_coverage_legacy_location": "CI=true mkdir -p coverage/unitlegacylocation/ && S3_LOCATION_FILE=tests/locationConfig/locationConfigLegacy.json S3BACKEND=mem MOCHA_FILE=$CIRCLE_TEST_REPORTS/unit/unitlegacylocation.xml istanbul cover --dir coverage/unitlegacylocation _mocha -- --reporter mocha-junit-reporter --recursive tests/unit"
  }
}
